PRODUCT = @PRODUCT@
VERSION = @VERSION@

SHELL = /bin/sh
top_srcdir = @top_srcdir@
srcdir = @srcdir@

.SUFFIXES:
.SUFFIXES: .c .o

CC = @CC@
DEFINES = @DEFS@
CFLAGS = -I. @CFLAGS@ $(DEFINES)
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@ -lgmp -lm -lpng
INSTALL = @INSTALL@
prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
mandir = @mandir@
datarootdir = @datarootdir@

DISTFILES =

TARGET1=mandeldump
SOURCES1=mandeldump.c
OBJS1=mandeldump.o
TARGET2=mandelmakepic
SOURCES2=mandelmakepic.c targa.c
OBJS2=mandelmakepic.o targa.o
HEADERS2=targa.h
TARGET3=mandelmakeoutline
SOURCES3=mandelmakeoutline.c targa.c
OBJS3=mandelmakeoutline.o targa.o
HEADERS3=targa.h
TARGET5=mandelxform
SOURCES5=mandelxform.c
OBJS5=mandelxform.o
TARGET6=thmand
SOURCES6=thmand.c targa.c
OBJS6=thmand.o targa.o
HEADERS6=targa.h
TARGET7=mandelxform_mpf
SOURCES7=mandelxform_mpf.c
OBJS7=mandelxform_mpf.o
TARGET8=mandelreadpicspec
SOURCES8=mandelreadpicspec.c targa.c
OBJS8=mandelreadpicspec.o targa.o
HEADERS8=targa.h
TARGET9=mandelcheckpercent
SOURCES9=mandelcheckpercent.c
OBJS9=mandelcheckpercent.o
TARGET10=bif
SOURCES10=bif.c
OBJS10=bif.o
TARGET11=henon
SOURCES11=henon.c
OBJS11=henon.o
HEADERS9=
TARGET12=mandelnumbers
SOURCES12=mandelnumbers.c targa.c
OBJS12=mandelnumbers.o targa.o
LIB_OBJS=

OBJS=$(OBJS1) $(OBJS2) $(OBJS3) $(OBJS5) $(OBJS6) $(OBJS7) $(OBJS8) $(OBJS9) $(OBJS10) $(OBJS11) $(OBJS12)
SOURCES=$(SOURCES1) $(SOURCES2) $(SOURCES3) $(SOURCES5) $(SOURCES6) $(SOURCES7) $(SOURCES8) $(SOURCES9) $(SOURCES10) $(SOURCES11) $(SOURCES12)
TARGETS=$(TARGET1) $(TARGET2) $(TARGET3) $(TARGET5) $(TARGET6) $(TARGET7) $(TARGET8) $(TARGET9) $(TARGET10) $(TARGET11) $(TARGET12)
DISTSRC=aclocal.m4 config.h.in configure configure.in install-sh Makefile.in mkinstalldirs $(SOURCES) README
DISTBIN=$(TARGETS) README

all: $(TARGETS)

install: all
	$(top_srcdir)/mkinstalldirs $(bindir)
	$(INSTALL) $(TARGETS) $(bindir)/

$(TARGET1): $(OBJS1)
	$(CC) $(CFLAGS) -o $(TARGET1) $(OBJS1) $(LDFLAGS) $(LIBS)

$(TARGET2): $(OBJS2)
	$(CC) $(CFLAGS) -o $(TARGET2) $(OBJS2) $(LDFLAGS) $(LIBS)

$(TARGET3): $(OBJS3)
	$(CC) $(CFLAGS) -o $(TARGET3) $(OBJS3) $(LDFLAGS) $(LIBS)

$(TARGET5): $(OBJS5)
	$(CC) $(CFLAGS) -o $(TARGET5) $(OBJS5) $(LDFLAGS) $(LIBS)

$(TARGET6): $(OBJS6)
	$(CC) $(CFLAGS) -o $(TARGET6) $(OBJS6) $(LDFLAGS) $(LIBS) -lpthread

$(TARGET7): $(OBJS7)
	$(CC) $(CFLAGS) -o $(TARGET7) $(OBJS7) $(LDFLAGS) $(LIBS)

$(TARGET8): $(OBJS8)
	$(CC) $(CFLAGS) -o $(TARGET8) $(OBJS8) $(LDFLAGS) $(LIBS)

$(TARGET9): $(OBJS9)
	$(CC) $(CFLAGS) -o $(TARGET9) $(OBJS9) $(LDFLAGS) $(LIBS)

$(TARGET10): $(OBJS10)
	$(CC) $(CFLAGS) -o $(TARGET10) $(OBJS10) $(LDFLAGS) $(LIBS)

$(TARGET11): $(OBJS11)
	$(CC) $(CFLAGS) -o $(TARGET11) $(OBJS11) $(LDFLAGS) $(LIBS)

$(TARGET12): $(OBJS12)
	$(CC) $(CFLAGS) -o $(TARGET12) $(OBJS12) $(LDFLAGS) $(LIBS)

$(OBJS1): $(SOURCES1)

$(OBJS2): $(SOURCES2) $(HEADERS2)

$(OBJS3): $(SOURCES3) $(HEADERS3)

$(OBJS5): $(SOURCES5)

$(OBJS6): $(SOURCES6) $(HEADERS6)

$(OBJS7): $(SOURCES7)

$(OBJS8): $(SOURCES8) $(HEADERS8)

$(OBJS9): $(SOURCES9)

$(OBJS10): $(SOURCES10)

$(OBJS11): $(SOURCES11)

$(OBJS12): $(SOURCES12)

clean:
	/bin/rm -f $(TARGETS) *.o core $(PRODUCT)-$(VERSION)-*.tar.gz*

distclean: clean config-clean

config-clean: confclean-recursive
confclean-recursive: cfg-clean

cfg-clean:
	/bin/rm -f Makefile config.h config.status config.cache config.log

mostlyclean: clean

maintainer-clean: clean

package: all
	tar czf $(PRODUCT)-$(VERSION)-bin.tar.gz $(DISTBIN)
	md5sum $(PRODUCT)-$(VERSION)-bin.tar.gz > $(PRODUCT)-$(VERSION)-bin.tar.gz.md5
	tar czf $(PRODUCT)-$(VERSION)-src.tar.gz $(DISTSRC)
	md5sum $(PRODUCT)-$(VERSION)-src.tar.gz > $(PRODUCT)-$(VERSION)-src.tar.gz.md5

# automatic re-running of configure if the configure.in file has changed
${srcdir}/configure: configure.in 
	cd ${srcdir} && autoconf

# autoheader might not change config.h.in, so touch a stamp file
${srcdir}/config.h.in: stamp-h.in
${srcdir}/stamp-h.in: configure.in 
		cd ${srcdir} && autoheader
		echo timestamp > ${srcdir}/stamp-h.in

config.h: stamp-h
stamp-h: config.h.in config.status
	./config.status
Makefile: Makefile.in config.status
	./config.status
config.status: configure
	./config.status --recheck



